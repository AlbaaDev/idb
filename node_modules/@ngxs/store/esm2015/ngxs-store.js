/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { NgxsModule, Action, Store, State, Select, SelectorOptions, Actions, getSelectorMetadata, getStoreMetadata, ensureStoreMetadata, ensureSelectorMetadata, ofAction, ofActionDispatched, ofActionSuccessful, ofActionCanceled, ofActionErrored, ofActionCompleted, NgxsSimpleChange, Selector, getActionTypeFromInstance, actionMatcher, createSelector, NoopNgxsExecutionStrategy, StateToken, NGXS_PLUGINS, StateStream, setValue, getValue, InitState, UpdateState } from './index';
export { InternalActions as ɵb, OrderedSubject as ɵa } from './src/actions-stream';
export { DispatchOutsideZoneNgxsExecutionStrategy as ɵx } from './src/execution/dispatch-outside-zone-ngxs-execution-strategy';
export { InternalNgxsExecutionStrategy as ɵp } from './src/execution/internal-ngxs-execution-strategy';
export { NGXS_EXECUTION_STRATEGY as ɵh } from './src/execution/symbols';
export { InternalDispatchedActionResults as ɵk, InternalDispatcher as ɵl } from './src/internal/dispatcher';
export { ensureSelectorMetadata as ɵt, ensureStoreMetadata as ɵr, getSelectorMetadata as ɵu, getStoreMetadata as ɵs } from './src/internal/internals';
export { LifecycleStateManager as ɵv } from './src/internal/lifecycle-state-manager';
export { StateContextFactory as ɵm } from './src/internal/state-context-factory';
export { StateFactory as ɵj } from './src/internal/state-factory';
export { InternalStateOperations as ɵn } from './src/internal/state-operations';
export { NgxsFeatureModule as ɵw } from './src/modules/ngxs-feature.module';
export { NgxsRootModule as ɵi } from './src/modules/ngxs-root.module';
export { PluginManager as ɵo } from './src/plugin-manager';
export { FEATURE_STATE_TOKEN as ɵd, NgxsConfig as ɵf, ROOT_STATE_TOKEN as ɵc, SELECTOR_META_KEY as ɵe } from './src/symbols';
export { mergeDeep as ɵg } from './src/utils/utils';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4cy1zdG9yZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzL3N0b3JlLyIsInNvdXJjZXMiOlsibmd4cy1zdG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBSUEsbWRBQWMsU0FBUyxDQUFDO0FBRXhCLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLGNBQWMsSUFBSSxFQUFFLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUNoRixPQUFPLEVBQUMsd0NBQXdDLElBQUksRUFBRSxFQUFDLE1BQU0sK0RBQStELENBQUM7QUFDN0gsT0FBTyxFQUFDLDZCQUE2QixJQUFJLEVBQUUsRUFBQyxNQUFNLGtEQUFrRCxDQUFDO0FBQ3JHLE9BQU8sRUFBQyx1QkFBdUIsSUFBSSxFQUFFLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN0RSxPQUFPLEVBQUMsK0JBQStCLElBQUksRUFBRSxFQUFDLGtCQUFrQixJQUFJLEVBQUUsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3pHLE9BQU8sRUFBMEIsc0JBQXNCLElBQUksRUFBRSxFQUFDLG1CQUFtQixJQUFJLEVBQUUsRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsZ0JBQWdCLElBQUksRUFBRSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDMUssT0FBTyxFQUFDLHFCQUFxQixJQUFJLEVBQUUsRUFBQyxNQUFNLHdDQUF3QyxDQUFDO0FBQ25GLE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxzQ0FBc0MsQ0FBQztBQUMvRSxPQUFPLEVBQUMsWUFBWSxJQUFJLEVBQUUsRUFBQyxNQUFNLDhCQUE4QixDQUFDO0FBQ2hFLE9BQU8sRUFBQyx1QkFBdUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUM5RSxPQUFPLEVBQUMsaUJBQWlCLElBQUksRUFBRSxFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFDMUUsT0FBTyxFQUFDLGNBQWMsSUFBSSxFQUFFLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNwRSxPQUFPLEVBQUMsYUFBYSxJQUFJLEVBQUUsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBRXpELE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsVUFBVSxJQUFJLEVBQUUsRUFBQyxnQkFBZ0IsSUFBSSxFQUFFLEVBQUMsaUJBQWlCLElBQUksRUFBRSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hILE9BQU8sRUFBQyxTQUFTLElBQUksRUFBRSxFQUFDLE1BQU0sbUJBQW1CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vaW5kZXgnO1xuXG5leHBvcnQge0ludGVybmFsQWN0aW9ucyBhcyDJtWIsT3JkZXJlZFN1YmplY3QgYXMgybVhfSBmcm9tICcuL3NyYy9hY3Rpb25zLXN0cmVhbSc7XG5leHBvcnQge0Rpc3BhdGNoT3V0c2lkZVpvbmVOZ3hzRXhlY3V0aW9uU3RyYXRlZ3kgYXMgybV4fSBmcm9tICcuL3NyYy9leGVjdXRpb24vZGlzcGF0Y2gtb3V0c2lkZS16b25lLW5neHMtZXhlY3V0aW9uLXN0cmF0ZWd5JztcbmV4cG9ydCB7SW50ZXJuYWxOZ3hzRXhlY3V0aW9uU3RyYXRlZ3kgYXMgybVwfSBmcm9tICcuL3NyYy9leGVjdXRpb24vaW50ZXJuYWwtbmd4cy1leGVjdXRpb24tc3RyYXRlZ3knO1xuZXhwb3J0IHtOR1hTX0VYRUNVVElPTl9TVFJBVEVHWSBhcyDJtWh9IGZyb20gJy4vc3JjL2V4ZWN1dGlvbi9zeW1ib2xzJztcbmV4cG9ydCB7SW50ZXJuYWxEaXNwYXRjaGVkQWN0aW9uUmVzdWx0cyBhcyDJtWssSW50ZXJuYWxEaXNwYXRjaGVyIGFzIMm1bH0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvZGlzcGF0Y2hlcic7XG5leHBvcnQge1N0YXRlQ2xhc3NJbnRlcm5hbCBhcyDJtXEsZW5zdXJlU2VsZWN0b3JNZXRhZGF0YSBhcyDJtXQsZW5zdXJlU3RvcmVNZXRhZGF0YSBhcyDJtXIsZ2V0U2VsZWN0b3JNZXRhZGF0YSBhcyDJtXUsZ2V0U3RvcmVNZXRhZGF0YSBhcyDJtXN9IGZyb20gJy4vc3JjL2ludGVybmFsL2ludGVybmFscyc7XG5leHBvcnQge0xpZmVjeWNsZVN0YXRlTWFuYWdlciBhcyDJtXZ9IGZyb20gJy4vc3JjL2ludGVybmFsL2xpZmVjeWNsZS1zdGF0ZS1tYW5hZ2VyJztcbmV4cG9ydCB7U3RhdGVDb250ZXh0RmFjdG9yeSBhcyDJtW19IGZyb20gJy4vc3JjL2ludGVybmFsL3N0YXRlLWNvbnRleHQtZmFjdG9yeSc7XG5leHBvcnQge1N0YXRlRmFjdG9yeSBhcyDJtWp9IGZyb20gJy4vc3JjL2ludGVybmFsL3N0YXRlLWZhY3RvcnknO1xuZXhwb3J0IHtJbnRlcm5hbFN0YXRlT3BlcmF0aW9ucyBhcyDJtW59IGZyb20gJy4vc3JjL2ludGVybmFsL3N0YXRlLW9wZXJhdGlvbnMnO1xuZXhwb3J0IHtOZ3hzRmVhdHVyZU1vZHVsZSBhcyDJtXd9IGZyb20gJy4vc3JjL21vZHVsZXMvbmd4cy1mZWF0dXJlLm1vZHVsZSc7XG5leHBvcnQge05neHNSb290TW9kdWxlIGFzIMm1aX0gZnJvbSAnLi9zcmMvbW9kdWxlcy9uZ3hzLXJvb3QubW9kdWxlJztcbmV4cG9ydCB7UGx1Z2luTWFuYWdlciBhcyDJtW99IGZyb20gJy4vc3JjL3BsdWdpbi1tYW5hZ2VyJztcbmV4cG9ydCB7VG9rZW5OYW1lIGFzIMm1eX0gZnJvbSAnLi9zcmMvc3RhdGUtdG9rZW4vc3ltYm9scyc7XG5leHBvcnQge0ZFQVRVUkVfU1RBVEVfVE9LRU4gYXMgybVkLE5neHNDb25maWcgYXMgybVmLFJPT1RfU1RBVEVfVE9LRU4gYXMgybVjLFNFTEVDVE9SX01FVEFfS0VZIGFzIMm1ZX0gZnJvbSAnLi9zcmMvc3ltYm9scyc7XG5leHBvcnQge21lcmdlRGVlcCBhcyDJtWd9IGZyb20gJy4vc3JjL3V0aWxzL3V0aWxzJzsiXX0=