/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { getStoreMetadata } from '../internal/internals';
import { throwStateDecoratorError, throwStateNameError, throwStateNamePropertyError, throwStateUniqueError } from '../configs/messages.config';
/**
 * @abstract
 */
var StoreValidators = /** @class */ (function () {
    function StoreValidators() {
    }
    /**
     * @param {?} name
     * @return {?}
     */
    StoreValidators.checkThatStateIsNamedCorrectly = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        if (!name) {
            throwStateNamePropertyError();
        }
        else if (!this.stateNameRegex.test(name)) {
            throwStateNameError(name);
        }
    };
    /**
     * @param {?} stateName
     * @param {?} state
     * @param {?} statesByName
     * @return {?}
     */
    StoreValidators.checkThatStateNameIsUnique = /**
     * @param {?} stateName
     * @param {?} state
     * @param {?} statesByName
     * @return {?}
     */
    function (stateName, state, statesByName) {
        /** @type {?} */
        var existingState = statesByName[stateName];
        if (existingState && existingState !== state) {
            throwStateUniqueError(stateName, state.name, existingState.name);
        }
    };
    /**
     * @param {?} stateClasses
     * @return {?}
     */
    StoreValidators.checkThatStateClassesHaveBeenDecorated = /**
     * @param {?} stateClasses
     * @return {?}
     */
    function (stateClasses) {
        stateClasses.forEach((/**
         * @param {?} stateClass
         * @return {?}
         */
        function (stateClass) {
            if (!getStoreMetadata(stateClass)) {
                throwStateDecoratorError(stateClass.name);
            }
        }));
    };
    StoreValidators.stateNameRegex = new RegExp('^[a-zA-Z0-9_]+$');
    return StoreValidators;
}());
export { StoreValidators };
if (false) {
    /**
     * @type {?}
     * @private
     */
    StoreValidators.stateNameRegex;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUtdmFsaWRhdG9ycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzL3N0b3JlLyIsInNvdXJjZXMiOlsic3JjL3V0aWxzL3N0b3JlLXZhbGlkYXRvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBb0MsTUFBTSx1QkFBdUIsQ0FBQztBQUMzRixPQUFPLEVBQ0wsd0JBQXdCLEVBQ3hCLG1CQUFtQixFQUNuQiwyQkFBMkIsRUFDM0IscUJBQXFCLEVBQ3RCLE1BQU0sNEJBQTRCLENBQUM7Ozs7QUFFcEM7SUFBQTtJQStCQSxDQUFDOzs7OztJQTVCUSw4Q0FBOEI7Ozs7SUFBckMsVUFBc0MsSUFBbUI7UUFDdkQsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNULDJCQUEyQixFQUFFLENBQUM7U0FDL0I7YUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDMUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDM0I7SUFDSCxDQUFDOzs7Ozs7O0lBRU0sMENBQTBCOzs7Ozs7SUFBakMsVUFDRSxTQUFpQixFQUNqQixLQUF5QixFQUN6QixZQUEwQjs7WUFFcEIsYUFBYSxHQUFHLFlBQVksQ0FBQyxTQUFTLENBQUM7UUFDN0MsSUFBSSxhQUFhLElBQUksYUFBYSxLQUFLLEtBQUssRUFBRTtZQUM1QyxxQkFBcUIsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDbEU7SUFDSCxDQUFDOzs7OztJQUVNLHNEQUFzQzs7OztJQUE3QyxVQUNFLFlBQWtDO1FBRWxDLFlBQVksQ0FBQyxPQUFPOzs7O1FBQUMsVUFBQyxVQUE4QjtZQUNsRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLEVBQUU7Z0JBQ2pDLHdCQUF3QixDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUMzQztRQUNILENBQUMsRUFBQyxDQUFDO0lBQ0wsQ0FBQztJQTdCYyw4QkFBYyxHQUFXLElBQUksTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUE4QnhFLHNCQUFDO0NBQUEsQUEvQkQsSUErQkM7U0EvQnFCLGVBQWU7Ozs7OztJQUNuQywrQkFBc0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRTdG9yZU1ldGFkYXRhLCBTdGF0ZUNsYXNzSW50ZXJuYWwsIFN0YXRlc0J5TmFtZSB9IGZyb20gJy4uL2ludGVybmFsL2ludGVybmFscyc7XG5pbXBvcnQge1xuICB0aHJvd1N0YXRlRGVjb3JhdG9yRXJyb3IsXG4gIHRocm93U3RhdGVOYW1lRXJyb3IsXG4gIHRocm93U3RhdGVOYW1lUHJvcGVydHlFcnJvcixcbiAgdGhyb3dTdGF0ZVVuaXF1ZUVycm9yXG59IGZyb20gJy4uL2NvbmZpZ3MvbWVzc2FnZXMuY29uZmlnJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFN0b3JlVmFsaWRhdG9ycyB7XG4gIHByaXZhdGUgc3RhdGljIHN0YXRlTmFtZVJlZ2V4OiBSZWdFeHAgPSBuZXcgUmVnRXhwKCdeW2EtekEtWjAtOV9dKyQnKTtcblxuICBzdGF0aWMgY2hlY2tUaGF0U3RhdGVJc05hbWVkQ29ycmVjdGx5KG5hbWU6IHN0cmluZyB8IG51bGwpOiB2b2lkIHwgbmV2ZXIge1xuICAgIGlmICghbmFtZSkge1xuICAgICAgdGhyb3dTdGF0ZU5hbWVQcm9wZXJ0eUVycm9yKCk7XG4gICAgfSBlbHNlIGlmICghdGhpcy5zdGF0ZU5hbWVSZWdleC50ZXN0KG5hbWUpKSB7XG4gICAgICB0aHJvd1N0YXRlTmFtZUVycm9yKG5hbWUpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBjaGVja1RoYXRTdGF0ZU5hbWVJc1VuaXF1ZShcbiAgICBzdGF0ZU5hbWU6IHN0cmluZyxcbiAgICBzdGF0ZTogU3RhdGVDbGFzc0ludGVybmFsLFxuICAgIHN0YXRlc0J5TmFtZTogU3RhdGVzQnlOYW1lXG4gICk6IHZvaWQgfCBuZXZlciB7XG4gICAgY29uc3QgZXhpc3RpbmdTdGF0ZSA9IHN0YXRlc0J5TmFtZVtzdGF0ZU5hbWVdO1xuICAgIGlmIChleGlzdGluZ1N0YXRlICYmIGV4aXN0aW5nU3RhdGUgIT09IHN0YXRlKSB7XG4gICAgICB0aHJvd1N0YXRlVW5pcXVlRXJyb3Ioc3RhdGVOYW1lLCBzdGF0ZS5uYW1lLCBleGlzdGluZ1N0YXRlLm5hbWUpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBjaGVja1RoYXRTdGF0ZUNsYXNzZXNIYXZlQmVlbkRlY29yYXRlZChcbiAgICBzdGF0ZUNsYXNzZXM6IFN0YXRlQ2xhc3NJbnRlcm5hbFtdXG4gICk6IHZvaWQgfCBuZXZlciB7XG4gICAgc3RhdGVDbGFzc2VzLmZvckVhY2goKHN0YXRlQ2xhc3M6IFN0YXRlQ2xhc3NJbnRlcm5hbCkgPT4ge1xuICAgICAgaWYgKCFnZXRTdG9yZU1ldGFkYXRhKHN0YXRlQ2xhc3MpKSB7XG4gICAgICAgIHRocm93U3RhdGVEZWNvcmF0b3JFcnJvcihzdGF0ZUNsYXNzLm5hbWUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iXX0=