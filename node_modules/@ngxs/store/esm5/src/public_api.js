/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
export { NgxsModule } from './module';
export { Action } from './decorators/action';
export { Store } from './store';
export { State } from './decorators/state';
export { Select } from './decorators/select/select';
export { SelectorOptions } from './decorators/selector-options';
export { Actions } from './actions-stream';
// TODO: v4 - We need to come up with an alternative api to exposing this metadata
//   because it is currently used by the following (after a github search):
// - https://github.com/ngxs-labs/emitter/blob/81d21d135400d7e3765fc579e09aea29b1b92bf7/emitter/src/lib/core/decorators/receiver.ts#L91
// - https://github.com/ngxs-labs/data/blob/73a320059f21924eb975a86adae5169a404071fd/src/lib/decorators/persistence/persistence.ts#L13
// - https://github.com/ng-turkey/ngxs-reset-plugin/blob/0f22f22e277c7de5b340d1917aae303d01020cee/src/lib/reset.plugin.ts#L19
// tslint:disable: max-line-length
// - https://github.com/ngxs-labs/firebase-plugin/blob/7251d877aeadefea8c3c891b7b55e7653a9f289c/src/lib/decorators/ngxs-firestore-connect.ts#L23
// - https://github.com/stefan-schubert/ngxs-extensions/blob/922ee2f87eba17823b5efab142b656b0d29f827d/src/lib/core/decorators/reset-state.decorator.ts#L18
// tslint:enable: max-line-length
export { getSelectorMetadata, getStoreMetadata, ensureStoreMetadata, ensureSelectorMetadata } from './public_to_deprecate';
export { ofAction, ofActionDispatched, ofActionSuccessful, ofActionCanceled, ofActionErrored, ofActionCompleted } from './operators/of-action';
export { NgxsSimpleChange } from './symbols';
export { Selector } from './decorators/selector/selector';
export { getActionTypeFromInstance, actionMatcher } from './utils/utils';
export { createSelector } from './utils/selector-utils';
export { NoopNgxsExecutionStrategy } from './execution/noop-ngxs-execution-strategy';
export { StateToken } from './state-token/state-token';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3hzL3N0b3JlLyIsInNvdXJjZXMiOlsic3JjL3B1YmxpY19hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDdEMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDaEMsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDaEUsT0FBTyxFQUFFLE9BQU8sRUFBK0IsTUFBTSxrQkFBa0IsQ0FBQzs7Ozs7Ozs7OztBQVd4RSxPQUFPLEVBQ0wsbUJBQW1CLEVBQ25CLGdCQUFnQixFQUNoQixtQkFBbUIsRUFDbkIsc0JBQXNCLEVBQ3ZCLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUNMLFFBQVEsRUFDUixrQkFBa0IsRUFDbEIsa0JBQWtCLEVBQ2xCLGdCQUFnQixFQUNoQixlQUFlLEVBQ2YsaUJBQWlCLEVBRWxCLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQU9MLGdCQUFnQixFQUNqQixNQUFNLFdBQVcsQ0FBQztBQUNuQixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDMUQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFHeEQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDckYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDJCQUEyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgTmd4c01vZHVsZSB9IGZyb20gJy4vbW9kdWxlJztcbmV4cG9ydCB7IEFjdGlvbiB9IGZyb20gJy4vZGVjb3JhdG9ycy9hY3Rpb24nO1xuZXhwb3J0IHsgU3RvcmUgfSBmcm9tICcuL3N0b3JlJztcbmV4cG9ydCB7IFN0YXRlIH0gZnJvbSAnLi9kZWNvcmF0b3JzL3N0YXRlJztcbmV4cG9ydCB7IFNlbGVjdCB9IGZyb20gJy4vZGVjb3JhdG9ycy9zZWxlY3Qvc2VsZWN0JztcbmV4cG9ydCB7IFNlbGVjdG9yT3B0aW9ucyB9IGZyb20gJy4vZGVjb3JhdG9ycy9zZWxlY3Rvci1vcHRpb25zJztcbmV4cG9ydCB7IEFjdGlvbnMsIEFjdGlvbkNvbnRleHQsIEFjdGlvblN0YXR1cyB9IGZyb20gJy4vYWN0aW9ucy1zdHJlYW0nO1xuXG4vLyBUT0RPOiB2NCAtIFdlIG5lZWQgdG8gY29tZSB1cCB3aXRoIGFuIGFsdGVybmF0aXZlIGFwaSB0byBleHBvc2luZyB0aGlzIG1ldGFkYXRhXG4vLyAgIGJlY2F1c2UgaXQgaXMgY3VycmVudGx5IHVzZWQgYnkgdGhlIGZvbGxvd2luZyAoYWZ0ZXIgYSBnaXRodWIgc2VhcmNoKTpcbi8vIC0gaHR0cHM6Ly9naXRodWIuY29tL25neHMtbGFicy9lbWl0dGVyL2Jsb2IvODFkMjFkMTM1NDAwZDdlMzc2NWZjNTc5ZTA5YWVhMjliMWI5MmJmNy9lbWl0dGVyL3NyYy9saWIvY29yZS9kZWNvcmF0b3JzL3JlY2VpdmVyLnRzI0w5MVxuLy8gLSBodHRwczovL2dpdGh1Yi5jb20vbmd4cy1sYWJzL2RhdGEvYmxvYi83M2EzMjAwNTlmMjE5MjRlYjk3NWE4NmFkYWU1MTY5YTQwNDA3MWZkL3NyYy9saWIvZGVjb3JhdG9ycy9wZXJzaXN0ZW5jZS9wZXJzaXN0ZW5jZS50cyNMMTNcbi8vIC0gaHR0cHM6Ly9naXRodWIuY29tL25nLXR1cmtleS9uZ3hzLXJlc2V0LXBsdWdpbi9ibG9iLzBmMjJmMjJlMjc3YzdkZTViMzQwZDE5MTdhYWUzMDNkMDEwMjBjZWUvc3JjL2xpYi9yZXNldC5wbHVnaW4udHMjTDE5XG4vLyB0c2xpbnQ6ZGlzYWJsZTogbWF4LWxpbmUtbGVuZ3RoXG4vLyAtIGh0dHBzOi8vZ2l0aHViLmNvbS9uZ3hzLWxhYnMvZmlyZWJhc2UtcGx1Z2luL2Jsb2IvNzI1MWQ4NzdhZWFkZWZlYThjM2M4OTFiN2I1NWU3NjUzYTlmMjg5Yy9zcmMvbGliL2RlY29yYXRvcnMvbmd4cy1maXJlc3RvcmUtY29ubmVjdC50cyNMMjNcbi8vIC0gaHR0cHM6Ly9naXRodWIuY29tL3N0ZWZhbi1zY2h1YmVydC9uZ3hzLWV4dGVuc2lvbnMvYmxvYi85MjJlZTJmODdlYmExNzgyM2I1ZWZhYjE0MmI2NTZiMGQyOWY4MjdkL3NyYy9saWIvY29yZS9kZWNvcmF0b3JzL3Jlc2V0LXN0YXRlLmRlY29yYXRvci50cyNMMThcbi8vIHRzbGludDplbmFibGU6IG1heC1saW5lLWxlbmd0aFxuZXhwb3J0IHtcbiAgZ2V0U2VsZWN0b3JNZXRhZGF0YSxcbiAgZ2V0U3RvcmVNZXRhZGF0YSxcbiAgZW5zdXJlU3RvcmVNZXRhZGF0YSxcbiAgZW5zdXJlU2VsZWN0b3JNZXRhZGF0YVxufSBmcm9tICcuL3B1YmxpY190b19kZXByZWNhdGUnO1xuZXhwb3J0IHtcbiAgb2ZBY3Rpb24sXG4gIG9mQWN0aW9uRGlzcGF0Y2hlZCxcbiAgb2ZBY3Rpb25TdWNjZXNzZnVsLFxuICBvZkFjdGlvbkNhbmNlbGVkLFxuICBvZkFjdGlvbkVycm9yZWQsXG4gIG9mQWN0aW9uQ29tcGxldGVkLFxuICBBY3Rpb25Db21wbGV0aW9uXG59IGZyb20gJy4vb3BlcmF0b3JzL29mLWFjdGlvbic7XG5leHBvcnQge1xuICBTdGF0ZUNvbnRleHQsXG4gIFN0YXRlT3BlcmF0b3IsXG4gIE5neHNPbkluaXQsXG4gIE5neHNBZnRlckJvb3RzdHJhcCxcbiAgTmd4c09uQ2hhbmdlcyxcbiAgTmd4c01vZHVsZU9wdGlvbnMsXG4gIE5neHNTaW1wbGVDaGFuZ2Vcbn0gZnJvbSAnLi9zeW1ib2xzJztcbmV4cG9ydCB7IFNlbGVjdG9yIH0gZnJvbSAnLi9kZWNvcmF0b3JzL3NlbGVjdG9yL3NlbGVjdG9yJztcbmV4cG9ydCB7IGdldEFjdGlvblR5cGVGcm9tSW5zdGFuY2UsIGFjdGlvbk1hdGNoZXIgfSBmcm9tICcuL3V0aWxzL3V0aWxzJztcbmV4cG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSAnLi91dGlscy9zZWxlY3Rvci11dGlscyc7XG5leHBvcnQgeyBOZ3hzRXhlY3V0aW9uU3RyYXRlZ3kgfSBmcm9tICcuL2V4ZWN1dGlvbi9zeW1ib2xzJztcbmV4cG9ydCB7IEFjdGlvblR5cGUsIEFjdGlvbk9wdGlvbnMgfSBmcm9tICcuL2FjdGlvbnMvc3ltYm9scyc7XG5leHBvcnQgeyBOb29wTmd4c0V4ZWN1dGlvblN0cmF0ZWd5IH0gZnJvbSAnLi9leGVjdXRpb24vbm9vcC1uZ3hzLWV4ZWN1dGlvbi1zdHJhdGVneSc7XG5leHBvcnQgeyBTdGF0ZVRva2VuIH0gZnJvbSAnLi9zdGF0ZS10b2tlbi9zdGF0ZS10b2tlbic7XG4iXX0=